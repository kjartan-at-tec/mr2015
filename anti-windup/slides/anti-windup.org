#+OPTIONS: toc:nil
# #+LaTeX_CLASS: koma-article 

#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation,aspectratio=169, usenames, dvipsnames]
#+OPTIONS: H:2

#+LaTex_HEADER: \usepackage{khpreamble}
#+LaTex_HEADER: \usepackage{amssymb}
#+LaTex_HEADER: \usepgfplotslibrary{groupplots}

#+LaTex_HEADER: \newcommand*{\shift}{\operatorname{q}}
#+LaTex_HEADER:   \definecolor{ppc}{rgb}{0.1,0.1,0.6}
#+LaTex_HEADER:   \definecolor{iic}{rgb}{0.6,0.1,0.1}
#+LaTex_HEADER:   \definecolor{ddc}{rgb}{0.1,0.6,0.1}

#+LaTex_HEADER: \def\ucolor{blue!80!black}
#+LaTex_HEADER: \def\ycolor{green!60!black}
#+LaTex_HEADER: \newcommand*{\incolor}[1]{\textcolor{\ucolor}{#1}}
#+LaTex_HEADER: \newcommand*{\outcolor}[1]{\textcolor{\ycolor}{#1}}

#+title:  Anti-windup


# #+date: 2021-03-03

* PID tuning - (Smith and Corripio) Ziegler Nichols
** The PID - practical form
   \definecolor{ppc}{rgb}{0.1,0.1,0.6}
   \definecolor{iic}{rgb}{0.6,0.1,0.1}
   \definecolor{ddc}{rgb}{0.1,0.5,0.1}
   
   #+begin_export latex
   \begin{center}
     \begin{tikzpicture}[node distance=22mm, block/.style={rectangle, draw, minimum width=15mm}, sumnode/.style={circle, draw, inner sep=2pt}]
    
       \node[coordinate] (input) {};
       \node[sumnode, right of=input, node distance=16mm] (sum) {\tiny $\Sigma$};
       \node[color=iic,block, right of=sum, node distance=28mm] (ii)  {$\frac{1}{\tau_is}$};
       \node[color=ppc, coordinate, above of=ii, node distance=10mm] (pp)  {};
       \node[color=ddc,block, below of=ii, node distance=13mm] (dd)  {$\frac{-\tau_ds}{\frac{\tau_d}{N}s + 1}$};
       \node[sumnode, right of=ii, node distance=20mm] (sum2) {\tiny $\Sigma$};
       \node[block, right of=sum2, node distance=20mm] (gain)  {$k_c$};
       \node[coordinate, below of=sum, node distance=18mm] (feedback) {};
       \node[coordinate, right of=gain, node distance=20mm] (output) {};

       \draw[->] (input) -- node[above, pos=0.3] {$r(t)$} (sum);
       \draw[->] (sum) -- node[above, pos=0.2] {$e(t)$} node[coordinate] (mm) {}  (ii);
       \draw[->] (gain) -- node[above, near end] {$u(t)$} (output);
       \draw[->] (feedback) -- node[left, near start] {$y(t)$} node[right, pos=0.95] {-} (sum);
       \draw[->, color=ppc] (mm) |- (pp) -| node[right,] {$u_P(t)$} (sum2);
       \draw[->, color=ddc] (feedback |- dd) -- node[above, pos=0.95] {} (dd);
       \draw[->, color=ddc] (dd) -| node[right,] {$u_D(t)$} (sum2)  ;
       \draw[->, color=iic] (ii)  -- node[above,] {$u_I(t)$} (sum2);
       \draw[->] (sum2) -- node[above, near end] {} (gain);

     \end{tikzpicture}
   \end{center}
   #+end_export

#   The parameter \(N\) is chosen to limit the influence of noisy measurements. Typically,
#   \[  3 < N < 20 \]

* Windup

** Integral windup
   
   
   [[https://tecdemonterrey.instructuremedia.com/embed/6fb197b1-38a6-4938-b622-b25d4a45efcc][Video by TomÃ¡s Alejandro Lugo Salinas (MTY)]] 

* Anti-windup


** Anti-windup using back-calculation 

      #+begin_export latex
   \begin{center}
 	  \begin{tikzpicture}[every node/.append style={transform shape}, scale = 0.7, font=\footnotesize,
	block/.style={rectangle, draw, minimum width=12mm, minimum height=10mm, inner sep=4pt},
	amp/.style = {regular polygon, regular polygon sides=3,
              draw, fill=white, text width=1em,
              inner sep=1pt, outer sep=0mm,
              shape border rotate=-90},
	      summ/.style = {circle, draw, inner sep = 1pt},]
	 \node[block, align=center] (motor) at (0,0) {Cart and \\pendulum};
	 \node[coordinate, right of=motor, node distance = 26mm,] (output) {};
	 \node[block, left of=motor, node distance=26mm] (saturation) {};

	 \node[block, left of=saturation, node distance=26mm] (gain)  {$k_{c}$};
	 
	 \node[summ, left of=gain, node distance=16mm] (sum2) {};
	 \node[color=iic,block, left of=sum2, node distance=18mm] (int)  {$\frac{1}{s}$};
	 \node[summ, left of=int, node distance=16mm] (sumint) {};
	 \node[color=iic,block, left of=sumint, node distance=18mm] (ii)  {$\frac{1}{\tau_{i}}$};
	 \node[color=ppc, coordinate, above of=ii, node distance=10mm] (pp)  {};
	 \node[summ, left of=ii, node distance=16mm] (sumsp) {};
	 \node[coordinate, left of=sumsp, node distance = 10mm,] (setpoint) {};

       \draw[->] (sumsp) -- node[above, pos=0.2] {$e(t)$} node[coordinate] (mm) {}  (ii);
       \draw[->] (gain) -- node[coordinate] (idmeas) {} node[above, ] {$u(t)$} (saturation);
       \draw[->, color=ppc] (mm) |- (pp) -| node[right,] {$u_P(t)$} (sum2);
       \draw[->, color=iic] (int)  -- node[above,] {$u_I(t)$} (sum2);
       \draw[->] (sum2) -- node[above, near end] {} (gain);



	 \draw[->] (setpoint) -- node[above, very near start ] {$x_{ref}$} (sumsp);
	 \draw[->] (saturation) -- node[coordinate, ] (satmeas) {} node[above,] {$u_s(t)$} (motor);
	 \draw[->] (motor) -- node[coordinate] (meas) {} node[above, very near end] {$x$} (output);
	 \draw[->] (meas) -- node[right] {} ++(0,-28mm) -| node[pos=0.95, left] {$-$} (sumsp);

	 % Anti-windup
	 \draw ($ (saturation.south west) + (2mm, 2mm) $) -- ++(3mm, 0) -- ++(3mm, 5mm) -- ++(3mm, 0);
	 \node[block, below of=sumint, node distance=16mm] (back) {$\frac{1}{k_{c}\tau_t}$};
	 \node[summ, below of=saturation, node distance=12mm] (sumsat) {};
	 \draw[->] (satmeas) |- node[above, pos=0.8] {} (sumsat);
	 \draw[->] (idmeas) |- node[above, pos=0.8] {$-$} (sumsat);
	 \draw[->] (sumsat) |- (back);
	 \draw[->] (back) -- (sumint);
	 \draw[->] (ii) -- (sumint);
	 \draw[->] (sumint) -- (int);
	 

	 \node[coordinate, right of=back, node distance=2cm] (sat) {};
  
\end{tikzpicture}
\end{center}
   #+end_export

*Activity* Assume $e(t)=0$ and determine the transfer function from $u_s(t)$ to $u(t)$.
 
   

*** Notes                                                          :noexport:

Mason's gain formula.
Loop gain: L(s) = \frac{1}{\tau_t s}
Direct gain: L(s).

U(s) / U_s(s) = \frac{ L(s) }{ 1 + L(s) } = \frac{1}{\tau_t s + 1} 
